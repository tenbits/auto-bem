UTest({
	'should transform single css and nested element' () {
		var css = `
			.foo { color: red }
		`;
		var mask = `			
			div > span.foo;
		`;

		var { template, css: style } = AutoBem.transform(mask, css, { 
			scopeId: 'MyID',
			templateType: 'mask',
			type: 'host',
			minify: true
		});
			
		has_(template, 'span.MyID__foo.foo');	
		has_(template, 'div>')			
	},
	'should transform css and mask' () {
		var css = `
			.foo { color: red }
			.foo .item { background: green;}
		`;
		var mask = `			
			.foo {
				ul > li.item > 'Hello'
			}
		`;

		var { template, css: style } = AutoBem.transform(mask, css, { 
			scopeId: 'MyID',
			templateType: 'mask' 
		});
		
		has_(template, '.MyID.foo');
		has_(template, 'li.MyID__item.item');
		
		has_(style, '.MyID {');
		hasNot_(style, '.foo {');

		has_(style, '.MyID__item');
		hasNot_(style, '.item');
		
	}
})